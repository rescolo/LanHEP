%
% THDM III Model - t'Hooft-Feynman gauge.
%

model 'THDM III (Feyn. gauge)'/1.

option ReduceGamma5=0.
let g5=gamma5.
use th_tex.

prtcprop pdg.

%prtc#.mdl is one of the output files of LanHEP. To make
% it compatible with CalcHEP we need to change their format
% to include the PDG particle number as the third column
 
prtcformat fullname:'  Full Name  ',
           name:' P ',
           aname:' aP ',
           pdg:' number ',
           spin2, mass, width, color, aux,
           texname:'>  LaTeX P name  <',
           atexname:'>  LaTeX aP name < '.

parameter  EE  = 0.31333 : 'Electromagnetic coupling constant (<->1/128)',
	   GG  = 1.117   : 'Strong coupling constant (Z point)  (PDG-94)',
	   SW  = 0.4740  : 'sin of the Weinberg angle (PDG-94,"on-shell")',
           s12 = 0.221   : 'Parameter of C-K-M matrix (PDG-94)',
	   s23 = 0.040   : 'Parameter of C-K-M matrix (PDG-94)',
           s13 = 0.0035  : 'Parameter of C-K-M matrix (PDG-94)'.

parameter  CW  = sqrt(1-SW**2) : 'cos of the Weinberg angle'.

parameter  c12  = sqrt(1-s12**2) : 	'parameter  of C-K-M matrix',
           c23  = sqrt(1-s23**2) : 	'parameter  of C-K-M matrix',
           c13  = sqrt(1-s13**2) : 	'parameter  of C-K-M matrix'.

parameter  Vud = c12*c13 		: 'C-K-M matrix element',
	   Vus = s12*c13 		: 'C-K-M matrix element',
	   Vub = s13     		: 'C-K-M matrix element',
           Vcd = (-s12*c23-c12*s23*s13) : 'C-K-M matrix element',
           Vcs = (c12*c23-s12*s23*s13)  : 'C-K-M matrix element',
	   Vcb = s23*c13 		: 'C-K-M matrix element',
	   Vtd = (s12*s23-c12*c23*s13) 	: 'C-K-M matrix element',
	   Vts = (-c12*s23-s12*c23*s13)	: 'C-K-M matrix element',
	   Vtb = c23*c13  		: 'C-K-M matrix element'.

OrthMatrix( { {Vud,Vus,Vub}, {Vcd,Vcs,Vcb}, {Vtd,Vts,Vtb}} ).

vector  
	A/A: (photon, gauge),
	Z/Z:('Z boson', mass MZ = 91.187, width wZ = 2.502, gauge),
	G/G: (gluon, color c8, gauge),
	'W+'/'W-': ('W boson', mass MW = MZ*CW, width wW = 2.094, gauge).

spinor 		n1:(neutrino,left), 	   e1:(electron),
		n2:('mu-neutrino',left),   e2:(muon, mass Mm  = 0.1057),
		n3:('tau-neutrino',left),  e3:('tau-lepton', mass Mt  = 1.777).

spinor		u:('u-quark',color c3),
		d:('d-quark',color c3),
		c:('c-quark',color c3, mass Mc  = 1.300),
		s:('s-quark',color c3, mass Ms = 0.200),
		t:('t-quark',color c3, mass Mtop = 170, width wtop = 1.442),
		b:('b-quark',color c3, mass Mb =  4.300 ).

let l1={n1,e1}, L1={N1,E1}.
let l2={n2,e2}, L2={N2,E2}.
let l3={n3,e3}, L3={N3,E3}.

let q1={u,d}, Q1={U,D}, q1a={u,Vud*d+Vus*s+Vub*b}, Q1a={U,Vud*D+Vus*S+Vub*B}.
let q2={c,s}, Q2={C,S}, q2a={c,Vcd*d+Vcs*s+Vcb*b}, Q2a={C,Vcd*D+Vcs*S+Vcb*B}. 
let q3={t,b}, Q3={T,B}, q3a={t,Vtd*d+Vts*s+Vtb*b}, Q3a={T,Vtd*D+Vts*S+Vtb*B}.


let B1= -SW*Z+CW*A, W3=CW*Z+SW*A, W1=('W+'+'W-')/Sqrt2,
	 W2 = i*('W+'-'W-')/Sqrt2.


let gh1 = ('W+.c'+'W-.c')/Sqrt2, gh2= i*('W+.c'-'W-.c')/Sqrt2,
		gh3= CW*'Z.c'+SW*'A.c', gh={gh1,gh2,gh3}.

let Gh1 = ('W+.C'+'W-.C')/Sqrt2, Gh2=i*('W+.C'-'W-.C')/Sqrt2, 
		Gh3= CW*'Z.C'+SW*'A.C', Gh={Gh1,Gh2,Gh3}. 

let WW1 = {W1,  W2 , W3}, WW = {'W+',W3,'W-'}.

let g=EE/SW, g1=EE/CW.




% Self-interaction of gauge bosons



lterm -F**2/4   where 
	F=deriv^mu*B1^nu-deriv^nu*B1^mu.

lterm -F**2/4  where
	F=deriv^mu*G^nu^a-deriv^nu*G^mu^a+i*GG*f_SU3^a^b^c*G^mu^b*G^nu^c.

lterm -F**2/4  where
F=deriv^mu*WW1^nu^a-deriv^nu*WW1^mu^a -g*eps^a^b^c*WW1^mu^b*WW1^nu^c.




% left fermion interaction with gauge fields


lterm  	anti(psi)*gamma*(1-g5)/2*(i*deriv-g*taupm*WW/2-Y*g1*B1)*psi
		where 
			psi=l1,  Y=-1/2;
			psi=l2,  Y=-1/2;
			psi=l3,  Y=-1/2;
			psi=q1a, Y= 1/6;
			psi=q2a, Y= 1/6;
			psi=q3a, Y= 1/6.

% right fermion interaction with gauge fields

lterm  	anti(psi)*gamma*(1+g5)/2*(i*deriv - Y*g1*B1)*psi
		where 
			psi=e1,Y= -1;
			psi=e2,Y= -1;
			psi=e3,Y= -1;
			psi=u, Y=  2/3;
			psi=c, Y=  2/3;
			psi=t, Y=  2/3;
			psi=d, Y= -1/3;
			psi=s, Y= -1/3;
			psi=b, Y= -1/3.


% quark-gluon interaction

lterm  GG*anti(psi)*lambda*gamma*G*psi where
	psi=q1; psi=q2; psi=q3.

%%%%%%%% scalar sector
scalar 
     h/h:(Higgs, mass Mh = 130, width wh = 1.461),
     H/H: ('H0 Scalar', mass  MH0 = 125.672590488, width wH0 = 1.0),
     A0/A0: ('A0 Scalar', mass MA0 = 125.672590488, width wA0 = 1.0),
     'H+'/'H-': ('Charged Higgs', mass MHc = 200, width whc = 1.0).

%%%%%%%%%% parametros del modelo de dos dobletes %%%%%%%%%%%%%


let  vvev=Sqrt2*MW*SW/EE.

parameter  sb=0.8:'Sinus beta', cb=sqrt(1-sb**2):'Cosine beta'.

let vev1 = vvev*cb, vev2 = vvev*sb.

parameter  sa = -0.5:'Sinus alpha', ca = sqrt(1-sa**2):'Cosine alpha',
	   mu12 = 10000:'minimal condition'.

parameter  sasb = sa*cb + ca*sb:'sin(a+b)', sarb = sa*cb - ca*sb:'sin(a-b)', 
	   casb = ca*cb - sa*sb:'cos(a+b)', carb = ca*cb + sa*sb:'cos(a-b)'.

parameter s2b=2*sb*cb:'sinus 2beta'.

parameter c2b=cb**2-sb**2:'coseno 2beta'.


parameter s2a=2*sa*ca:'sinus 2alpha'.

parameter c2a=ca**2-sa**2:'coseno 2alpha'.

parameter  rD33 = 11 : 'Matrix FCNC Down',
	   rU33 = 7 : 'Matrix FCNC Up'.

%%%%%%%%%%%%%%%%%%%%%%%%% dobletes%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
let ph1 = { -i*(cb*'W+.f'-sb*'H+'),vev(vev1)+((ca*H-sa*h)+i*(cb*'Z.f'-sb*A0))/Sqrt2 },
    Ph1 = { i*(cb*'W-.f'-sb*'H-'),vev(vev1)+((ca*H-sa*h)-i*(cb*'Z.f'-sb*A0))/Sqrt2 }.

let ph2 = { -i*(sb*'W+.f'+cb*'H+'),vev(vev2)+((sa*H+ca*h)+i*(cb*A0+sb*'Z.f'))/Sqrt2 },
    Ph2 = { i*(sb*'W-.f'+cb*'H-'),vev(vev2)+((sa*H+ca*h)-i*(cb*A0+sb*'Z.f'))/Sqrt2 }.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%definicion parametros del potencial escalar%%%%%%%%%%%%%%%%%%%%%%%%%

let lambda1 = -mu12*sb/cb**3/4/vvev**2 + (Mh**2*sa**2+MH0**2*ca**2)/vvev**2/cb**2/4.

let lambda2 = -mu12*cb/sb**3/4/vvev**2 + (Mh**2*ca**2+MH0**2*sa**2)/vvev**2/sb**2/4.

let lambda3 = -mu12/cb/sb/vvev**2/2 + MHc**2/vvev**2-sa*ca*(Mh**2-MH0**2)/vvev**2/cb/sb/2.

let lambda4 = mu12/cb/sb/vvev**2/2 + (MA0**2-2*MHc**2)/vvev**2/2.

let lambda5 = mu12/cb/sb/vvev**2/2 - MA0**2/vvev**2/2.

let m1 = -mu12*sb/cb+2*lambda1*vev1**2+(lambda3+lambda4+lambda5)*vev2**2.

let m2 = -mu12*cb/sb+2*lambda2*vev2**2+(lambda3+lambda4+lambda5)*vev1**2.

%%%%%%%%%%%%%%%%% Potencial scalar (lagrangiano)%%%%%%%%%%%%%%%%%%%%%%%%%%

lterm m1*Ph1*ph1+m2*Ph2*ph2+mu12*(Ph1*ph2+ph1*Ph2).

lterm -lambda1*(Ph1*ph1)**2.

lterm -lambda2*(Ph2*ph2)**2.

lterm -lambda3*(Ph1*ph1*Ph2*ph2).

lterm -lambda4*(Ph1*ph2*Ph2*ph1).

lterm -lambda5*(Ph1*ph2*Ph1*ph2+Ph2*ph1*Ph2*ph1)/2.

%%%%%%%%%%%%yukawa lagrangian for third family%%%%%%%%%%%%%%%%%%


prtcprop pdg:(d=1, u=2, s=3,c=4, b=5, t=6, G=21, A=22, Z=23, 'W+'=24, h=37, e1=11, n1=12, e2=13, n2=14, e3=15, n3=16, 'A0'=35, H=36, 'H+'=37).

%%%Yukawa Tipo III
lterm  -M/MW/Sqrt2*g*(anti(pl)*(1+g5)/2*pr*ph1 + anti(pr)*(1-g5)/2*pl*Ph1 )
    where
	M=Vud*0,  pl=q1a, pr=d;          % 0 stands for Md 
	M=Vus*Ms, pl=q1a, pr=s;
	M=Vub*Mb, pl=q1a, pr=b;
	M=Vcd*0,  pl=q2a, pr=d;
	M=Vcs*Ms, pl=q2a, pr=s;
	M=Vcb*Mb, pl=q2a, pr=b;
	M=Vtd*0,  pl=q3a, pr=d;
	M=Vts*Ms, pl=q3a, pr=s;
	M=Vtb*Mb, pl=q3a, pr=b.


lterm  -M/MW/Sqrt2*g*(anti(pl)*(1+g5)/2*i*tau2*pr*Ph1 
		+ anti(pr)*(1-g5)/2*i*pl*tau2*ph1 ) 
 where
	M=0 ,  pl=q1a, pr=u;
	M=Mc,  pl=q2a, pr=c;
	M=Mtop,pl=q3a, pr=t.

lterm  -M/MW/Sqrt2*g*(anti(pl)*(1+g5)/2*pr*ph1 + anti(pr)*(1-g5)/2*pl*Ph1 )
    where
	M=Mm,  pl=l2,  pr=e2;
	M=Mt,  pl=l3,  pr=e3.
%%%%%%%%%%%%
%parameter tanbeta =sb/cb: 'tan(beta)'.

/*parameter zetau = tanbeta**(-1): 'zetau',
          zetad = -tanbeta: 'zetad',
          zetal=-tanbeta: 'zetal'. */

parameter zetau = cb/sb: 'zetau',
          zetad = -sb/cb: 'zetad',
          zetal = -sb/cb: 'zetal'. 


let l13={n1,zetal*e1}, L13={N1,zetal*E1}.
let l23={n2,zetal*e2}, L23={N2,zetal*E2}.
let l33={n3,zetal*e3}, L33={N3,zetal*E3}. 

let q1a3={zetau*u,zetad*(Vud*d+Vus*s+Vub*b)}, Q1a3={zetau*U,zetad*(Vud*D+Vus*S+Vub*B)}.
let q2a3={zetau*c,zetad*(Vcd*d+Vcs*s+Vcb*b)}, Q2a3={zetau*C,zetad*(Vcd*D+Vcs*S+Vcb*B)}. 
let q3a3={zetau*t,zetad*(Vtd*d+Vts*s+Vtb*b)}, Q3a3={zetau*T,zetad*(Vtd*D+Vts*S+Vtb*B)}.

lterm  -M/MW/Sqrt2*g*(anti(pl)*(1+g5)/2*pr*ph2 + anti(pr)*(1-g5)/2*pl*Ph2 )
    where
	M=Vud*0,  pl=q1a3, pr=d;          % 0 stands for Md 
	M=Vus*Ms, pl=q1a3, pr=s;
	M=Vub*Mb, pl=q1a3, pr=b;
	M=Vcd*0,  pl=q2a3, pr=d;
	M=Vcs*Ms, pl=q2a3, pr=s;
	M=Vcb*Mb, pl=q2a3, pr=b;
	M=Vtd*0,  pl=q3a3, pr=d;
	M=Vts*Ms, pl=q3a3, pr=s;
	M=Vtb*Mb, pl=q3a3, pr=b.


lterm  -M/MW/Sqrt2*g*(anti(pl)*(1+g5)/2*i*tau2*pr*Ph2 
		+ anti(pr)*(1-g5)/2*i*pl*tau2*ph2 ) 
 where
	M=0 ,  pl=q1a3, pr=u;
	M=Mc,  pl=q2a3, pr=c;
	M=Mtop,pl=q3a3, pr=t.

lterm  -M/MW/Sqrt2*g*(anti(pl)*(1+g5)/2*pr*ph2 + anti(pr)*(1-g5)/2*pl*Ph2 )
    where
	M=Mm,  pl=l23,  pr=e2;
	M=Mt,  pl=l33,  pr=e3.

%%%%%%%%%%%%%%
lterm -i*GG*f_SU3*ccghost(G)*G^mu*deriv^mu*ghost(G).
lterm  -1/2*(deriv*G)**2.

%lterm -g*eps*gh*WW1*deriv*Gh.

lterm g*eps*deriv*Gh*gh*WW1.


lterm  -1/2*(deriv*A)**2.


lterm  -1/2*(2*(deriv*'W+'+MW*'W+.f')*(deriv*'W-'+MW*'W-.f') +
	(deriv*Z+MW/CW*'Z.f')**2).


lterm -MW*EE/2/SW*((h+i*'Z.f')*('W-.C'*'W+.c' + 'W+.C'*'W-.c')
    		+h*'Z.C'*'Z.c'/CW**2-2*i*'Z.f'*'W+.C'*'W-.c').

lterm i*EE*MW/2/CW/SW*(
	'W+.f'*('W-.C'*'Z.c'*(1-2*SW**2)+'W-.c'*'Z.C'
			+2*CW*SW*'W-.C'*'A.c') -
	'W-.f'*('W+.C'*'Z.c'*(1-2*SW**2)+'W+.c'*'Z.C'
			+2*CW*SW*'W+.C'*'A.c')).

SetAngle(1-SW**2=CW**2).
SetAngle(1-sa**2=ca**2).
SetAngle(1-sb**2=cb**2).
SetAngle(sasb=sa*cb+ca*sb).
SetAngle(sarb=sa*cb-ca*sb).
SetAngle(carb=ca*cb+sa*sb).
SetAngle(casb=ca*cb-sa*sb).
SetAngle(s2b=2*sb*cb).
SetAngle(c2b=cb**2-sb**2).
SetAngle(s2a=2*sa*ca).
SetAngle(c2a=ca**2-sa**2).

CheckHerm.
option chepLPWidth=752.
option SmartAngleComb=1.
%SetEM(A,EE). %Chek electrocharges






